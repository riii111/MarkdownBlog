{
    "swagger": "2.0",
    "info": {
        "description": "This is Markdown Blog API",
        "title": "Markdown Blog API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8088",
    "basePath": "/",
    "paths": {
        "/api/articles": {
            "get": {
                "description": "Get published articles with cursor-based pagination",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "Get published articles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of articles per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor for pagination",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ArticleListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new blog article",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "Create a new article",
                "parameters": [
                    {
                        "description": "Article creation data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateArticleRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.CreateArticleResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/me": {
            "get": {
                "description": "Get articles created by the authenticated user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "Get user's articles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Number of articles per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor for pagination",
                        "name": "cursor",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter by status (all/draft/published)",
                        "name": "status",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ArticleListResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/articles/{slug}": {
            "get": {
                "description": "Get a blog article by slug",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "Get an article detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ArticleDetailResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a blog article by slug",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "Delete an article",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Article slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/tags/{slug}/articles": {
            "get": {
                "description": "Get published articles with specific tag",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "articles"
                ],
                "summary": "Get articles by tag",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag slug",
                        "name": "slug",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Number of articles per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Cursor for pagination",
                        "name": "cursor",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.ArticleListResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/login": {
            "post": {
                "description": "Login with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login user",
                "parameters": [
                    {
                        "description": "Login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dto.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ErrorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/logout": {
            "post": {
                "security": [
                    {
                        "CookieAuth": []
                    }
                ],
                "description": "Logout current user and invalidate session",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Logout user",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/register": {
            "post": {
                "description": "Register a new user with email, password and display name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration data",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.RegisterUserResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/endpoint.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.ArticleDetail": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "description": "Responseではuuid型にしない（フロントでは文字列扱いとなる）",
                    "type": "string"
                },
                "likes_count": {
                    "type": "integer"
                },
                "published_at": {
                    "type": "string"
                },
                "series": {
                    "$ref": "#/definitions/dto.SeriesInfo"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.TagInfo"
                    }
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserInfo"
                }
            }
        },
        "dto.ArticleDetailResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/dto.ArticleDetail"
                }
            }
        },
        "dto.ArticleListItem": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Responseではuuid型にしない（フロントでは文字列扱いとなる）",
                    "type": "string"
                },
                "likes_count": {
                    "type": "integer"
                },
                "published_at": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/dto.UserInfo"
                }
            }
        },
        "dto.ArticleListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.ArticleListItem"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.CursorPaginationMeta"
                }
            }
        },
        "dto.CreateArticleRequest": {
            "type": "object"
        },
        "dto.CreateArticleResponse": {
            "type": "object",
            "properties": {
                "slug": {
                    "type": "string",
                    "example": "slug"
                }
            }
        },
        "dto.CursorPaginationMeta": {
            "type": "object",
            "properties": {
                "has_more": {
                    "type": "boolean"
                },
                "items_per_page": {
                    "type": "integer"
                },
                "next_cursor": {
                    "type": "string"
                }
            }
        },
        "dto.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "minLength": 8,
                    "example": "password"
                }
            }
        },
        "dto.LoginResponse": {
            "type": "object",
            "properties": {
                "display_name": {
                    "description": "UI表示用",
                    "type": "string"
                },
                "id": {
                    "description": "Responseではuuid型にしない（フロントでは文字列扱いとなる）",
                    "type": "string"
                }
            }
        },
        "dto.RegisterUserRequest": {
            "type": "object",
            "required": [
                "display_name",
                "email",
                "password"
            ],
            "properties": {
                "display_name": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 1,
                    "example": "John Doe"
                },
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "maxLength": 32,
                    "minLength": 8,
                    "example": "password"
                }
            }
        },
        "dto.RegisterUserResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "display_name": {
                    "description": "UI表示用",
                    "type": "string"
                },
                "id": {
                    "description": "Responseではuuid型にしない（フロントでは文字列扱いとなる）",
                    "type": "string"
                }
            }
        },
        "dto.SeriesInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Responseではuuid型にしない（フロントでは文字列扱いとなる）",
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "dto.TagInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "description": "Responseではuuid型にしない（フロントでは文字列扱いとなる）",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "dto.UserInfo": {
            "type": "object",
            "properties": {
                "display_name": {
                    "type": "string"
                },
                "id": {
                    "description": "Responseではuuid型にしない（フロントでは文字列扱いとなる）",
                    "type": "string"
                }
            }
        },
        "endpoint.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "error message"
                }
            }
        }
    },
    "securityDefinitions": {
        "CookieAuth": {
            "type": "apiKey",
            "name": "session_token",
            "in": "cookie"
        }
    }
}